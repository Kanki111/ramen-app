<%= form_with(model: member_post, local: true) do |form| %>
  <% if member_post.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(member_post.errors.count, "error") %> prohibited this member_post from being saved:</h2>

      <ul>
        <% member_post.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :店名, class: "form_content_label" %>
    <%= form.text_field :title, class: "form_content_text_field" %>
  </div>

  <div class="field">
    <%= form.label :お店の場所, class: "form_content_label" %>
    <%= form.text_field :place, class: "form_content_text_field" %>
  </div>

  <div class="field">
    <%= form.label :image, class: "form_content_label"  %>
    <%=form.label "画像をアップロード" , class: "new_post_label"%><%= form.file_field :image , class: "new_post_image" %>
  </div>

  <div class="field">
  <%= form.label :お店のページのURL, class: "form_content_label" %>
  <%= form.text_field :ramen_type,  class: "form_content_text_field" %>
</div>


  <div class="field">
    <%= form.label :追加の画像やコメントなど, class: "form_content_label" %>
    <%= form.rich_text_area :content %>
  </div>

  <div class="field">
    <%= form.label :mapの追加, class: "form_content_label" %>

    <div id="floating-panel">
    <input id="latlng" type="textbox" value="37.09024, -95.712891">
    <input id="submit" type="button" value="Reverse Geocode">
</div>
<div id="map"></div>
  </div>

  <div class="actions">
    <%= form.submit :投稿をする, class: "new_post_button" %>
  </div>

  <script>
    let map
    let geocoder
    let marker
  
    function initMap()
    {
        var myLatLng = {lat: 35.658581, lng: 139.745433};
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 15,
            center: myLatLng
        });
        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map
        });

        document.getElementById('submit').addEventListener('click', function () {
            geocodeLatLng(testResults);
            alert("処理終了");
        });
    }

    function geocodeLatLng(callback) {
        let geocoder = new google.maps.Geocoder();
        let input = document.getElementById('latlng').value;
        let latlngStr = input.split(',', 2);
        let latlng = {lat: parseFloat(latlngStr[0]), lng: parseFloat(latlngStr[1])};
        geocoder.geocode({'location': latlng}, function(results, status) {
            if (status === google.maps.GeocoderStatus.OK) {
                if (results[1]) {
                  let lat = results[0].geometry.location.lat(); 
                  let lng = results[0].geometry.location.lng(); 
                  let mark = {
                  lat: lat, 
                  lng: lng,  
                    alert("成功")
                };
                map.setCenter(results[0].geometry.location);
                let marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location 
      });
               else {
                    alert('No results found');
                }
            } else {
                alert('失敗しました。理由: ' + status);
            }
        });
    }

    function testResults(geoCodeResults)
    {
        console.log(geoCodeResults);
    }
    initMap();
  </script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBfCmlyL2lyPkB-fTxtmVP_q0VEpEtGXW4&language=ja&region=JP&callback=initMap" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js"></script>
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<script src="//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js", type:"text/javascript"></script>
<% include_gon %>
<% end %>
